namespace XB.MtParser.Swift_Message
{
    public record BasicHeader
    {
        public BasicHeader(string basicHeaderContent)
        {
            if (string.IsNullOrWhiteSpace(basicHeaderContent))
                return;
            AppID = basicHeaderContent.Substring(0, 1);
            ServiceID = basicHeaderContent.Substring(1, 2);
            LTAddress = basicHeaderContent.Substring(3, 12);
            SessionNumber = basicHeaderContent.Substring(15, 4);
            SequenceNumber = basicHeaderContent.Substring(19, 6);
        }
        /// <summary>
        /// The Application Identifier identifies the application within which the message is being sent or received. 
        /// The available options are: F = FIN All user-to-user, FIN system and FIN service messages A = GPA (General Purpose Application) 
        /// Most GPA system and service messages L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 
        /// These values are automatically assigned by the SWIFT system and the user's CBT
        /// </summary>
        public string AppID { get; init; }
        /// <summary>
        /// The Service Identifier consists of two numeric characters.
        /// It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following: a user-to-user message, a system message, a service message
        /// for example, a session control command, such as SELECT, or a logical acknowledgment, such as ACK/SAK/UAK. 
        /// Possible values are 01 = FIN/GPA or 21 = ACK/NAK.
        /// </summary>
        public string ServiceID { get; init; }
        /// <summary>
        /// The Logical Terminal (LT) Address is a 12-character FIN address. 
        /// It is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code. 
        /// It consists of: - the BIC 8 CODE (8 characters) - the Logical Terminal Code (1 upper case alphabetic character) - the BIC Branch Code (3 characters)
        /// </summary>
        public string LTAddress { get; init; }
        /// <summary>
        /// The Session Number identifies the session in which the message was transmitted. 
        /// It is a four digits number that is automatically generated by the user's computer and padded with zeros.
        /// </summary>
        public string SessionNumber { get; init; }
        /// <summary>
        /// The sequence number always consists of six digits.
        /// It is the Input Sequence Number (ISN) of the sender's current input session or the Output Sequence Number (OSN) of the receiver's current output session. 
        /// It is automatically generated by the user's computer and padded with zeros.
        /// </summary>
        public string SequenceNumber { get; init; }
    }
}